/*
 evid
 Copyright (C) 2015 Christoph Kappestein
 License: MIT
*/
"use strict";angular.module("evid.definition",[]).service("definition",function(){this.setDefinition=function(api){this.api=api},this.getRoutings=function(){var routings=[];if(angular.isArray(this.api.routings))if(angular.isArray(evid.exclude))for(var i=0;i<this.api.routings.length;i++){for(var exclude=!1,j=0;j<evid.exclude.length;j++)if(this.api.routings[i].path.match(evid.exclude[j])){exclude=!0;break}exclude||routings.push(this.api.routings[i])}else routings=this.api.routings;return routings},this.getLinkByRel=function(rel){for(var i=0;i<this.api.links.length;i++)if(this.api.links[i].rel==rel)return this.api.links[i].href;return null}}),angular.module("evid.schema",[]).service("schema",function(){this.create=function(definition){this.definition=definition,this.schema=definition.schema;var self=this;return{getHtml:function(methodName,method){return self.getHtml(methodName,method)}}},this.getHtml=function(methodName,method){var html="<div>",request=this.getRequest(method);request&&(html+="<section>",html+='<md-subheader class="md-primary">'+methodName+" Request</md-subheader>",html+="<md-list layout-padding>",html+="<md-list-item>",html+=request,html+="</md-list-item>",html+="</md-list>",html+="</section>");for(var statusCodes=this.getAvailableResponseCodes(method),i=0;i<statusCodes.length;i++){var response=this.getResponse(method,statusCodes[i]);response&&(html+="<section>",html+='<md-subheader class="md-primary">'+methodName+" Response - "+statusCodes[i]+"</md-subheader>",html+="<md-list layout-padding>",html+="<md-list-item>",html+=response,html+="</md-list-item>",html+="</md-list>",html+="</section>")}return html+="</div>"},this.getRequest=function(method){if(method&&method.request){var data=this.getPointer(method.request);if(data)return this.transformSchema(data)}return null},this.getResponse=function(method,statusCode){if(method&&method.responses&&method.responses[statusCode]){var data=this.getPointer(method.responses[statusCode]);if(data)return this.transformSchema(data)}return null},this.getAvailableResponseCodes=function(method){var codes=[];if(method&&method.responses)for(var statusCode in method.responses)codes.push(statusCode);return codes},this.getPointer=function(path){if(!path)return null;"#/"==path.substring(0,2)&&(path=path.substring(2));for(var parts=path.split("/"),el=this.schema,i=0;i<parts.length&&el[parts[i]];i++)el=el[parts[i]];return el},this.resolveRef=function(schema){return schema.$ref&&(schema=this.resolveRef(this.getPointer(schema.$ref))),schema},this.transformSchema=function(schema){return this.buildObject(this.resolveRef(schema))},this.buildObject=function(schema){var html="";if(schema.properties){var references=[],title="Object";schema.title&&(title=schema.title),html+='<md-subheader class="md-hue-1"><strong>'+title+"</strong></md-subheader>",html+='<table class="evid-schema-table">',html+="<colgroup>",html+='    <col width="20%">',html+='    <col width="20%">',html+='    <col width="40%">',html+='    <col width="20%">',html+="</colgroup>",html+="<thead>",html+="<tr>",html+="    <th>Property</th>",html+="    <th>Type</th>",html+="    <th>Description</th>",html+="    <th>Constraints</th>",html+="</tr>",html+="</thead>",html+="<tbody>";for(var propertyName in schema.properties){var property=schema.properties[propertyName];property.$ref&&(property=this.resolveRef(property));var type=property.type?property.type:"string";if("object"==type){var object=this.resolveRef(property);object.title&&(type=object.title),references.push(object)}else if("array"==type&&property.items){var object=this.resolveRef(property.items);"object"==object.type?(type=object.title?"array&lt;"+object.title+"&gt;":"array&lt;object&gt;",references.push(object)):object.type&&(type="array&lt;"+object.type+"&gt;")}html+="<tr>",html+="<td><b>"+propertyName+"</b></td>",html+="<td>"+type+"</td>",html+="<td>"+(property.description?property.description:"")+"</td>",html+="<td>"+this.buildConstraints(property)+"</td>",html+="</tr>"}html+="</tbody>",html+="</table>";for(var i=0;i<references.length;i++)html+=this.buildObject(references[i])}return html},this.buildConstraints=function(property){var html="<dl>";return property.pattern&&(html+="<dt>Pattern:</dt><dd>"+property.pattern+"</dd>"),property["enum"]&&angular.isArray(property["enum"])&&(html+="<dt>Enumeration:</dt><dd>"+property["enum"].join(", ")+"</dd>"),property.minLength&&(html+="<dt>Min-Length:</dt><dd>"+property.minLength+"</dd>"),property.maxLength&&(html+="<dt>Max-Length:</dt><dd>"+property.maxLength+"</dd>"),property.minimum&&(html+="<dt>Minimum:</dt><dd>"+property.minimum+"</dd>"),property.maximum&&(html+="<dt>Maximum:</dt><dd>"+property.maximum+"</dd>"),html+="</dl>"}}),angular.module("evid.api",["ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/api/:api*",{templateUrl:"partials/api.html",controller:"ApiCtrl"})}]).controller("ApiCtrl",["$scope","$http","$compile","$mdSidenav","$routeParams","definition","schema",function($scope,$http,$compile,$mdSidenav,$routeParams,definition,schema){$scope.api,$scope.methods,$scope.loadApi=function(){var url=definition.getLinkByRel("detail");url=url.replace("{version}","*"),url=url.replace("{path}",$routeParams.api),$http.get(url).success(function(data){if($scope.api=data,$scope.api.methods){var methods={};for(var methodName in $scope.api.methods)methods[methodName]=$scope.getSchema(methodName,$scope.api.methods[methodName]);$scope.methods=methods,$mdSidenav("left").close()}})},$scope.getSchema=function(methodName,method){var apiSchema=schema.create($scope.api),linkFn=$compile(apiSchema.getHtml(methodName,method)),el=linkFn($scope);return el.html()},$scope.loadApi()}]),angular.module("evid.page",["ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/page/:page*",{templateUrl:"partials/page.html",controller:"PageCtrl"})}]).controller("PageCtrl",["$scope","$http","$routeParams","$filter","menu",function($scope,$http,$routeParams,$filter,menu){$scope.title,$scope.body,$scope.loadDocument=function(){for(var slugify=$filter("slugify"),item=!1,i=0;i<menu.length;i++)if(slugify(menu[i].title)==$routeParams.page){item=menu[i];break}item?($scope.title=item.title,$http.get(item.href).success(function(resp){$scope.body=resp}).error(function(resp){$scope.body=resp})):$scope.title="Page not found"},$scope.loadDocument()}]);var evid=angular.module("evid",["ngRoute","ngSanitize","ngMaterial","evid.definition","evid.schema","evid.api","evid.page"]);evid.config(["$routeProvider",function($routeProvider){$routeProvider.otherwise({redirectTo:"/"})}]),evid.config(function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("blue").accentPalette("grey")}),evid.config(function(hljsServiceProvider){hljsServiceProvider.setOptions({})}),evid.filter("slugify",function(){return function(input){return input?input.toLowerCase().replace(/\W+/g,"-"):""}}),evid.controller("AppCtrl",["$scope","$http","$mdSidenav","url","menu","definition",function($scope,$http,$mdSidenav,url,menu,definition){$scope.menus=menu,$scope.routings=[],$scope.toggleSidebar=function(){$mdSidenav("left").toggle()},$scope.loadRoutings=function(){$http.get(url).success(function(data){definition.setDefinition(data),$scope.routings=definition.getRoutings()})},$scope.loadRoutings()}]),evid.run(function(){});