"use strict";var evid=angular.module("evid",["ngRoute","ngSanitize","ngMaterial","ngAnimate","hljs","hc.marked","evid.definition","evid.registry","evid.schema","evid.api","evid.page"]);evid.provider("evid",(function(){var url=null,exclude=null,menu=null,examples=!1;this.setUrl=function(_url){url=_url},this.setExclude=function(_exclude){exclude=_exclude},this.setMenu=function(_menu){menu=_menu},this.setExamples=function(_examples){examples=_examples},this.guessEndpointUrl=function(urlRewrite){for(var url=window.location.href,removePart=function(url,sign){var count=(url.match(/\//g)||[]).length,pos=url.lastIndexOf(sign);return count>2&&-1!==pos?url.substring(0,pos):url},parts=["#","?","/","/"],i=0;i<parts.length;i++)url=removePart(url,parts[i]);return url+(urlRewrite?"/":"/index.php/")},this.$get=function(){return null===url&&"undefined"!=typeof fusio_url?url=fusio_url:null===url&&(url=this.guessFusioEndpointUrl(!1)),{url,exclude,menu,examples}}})),evid.config(["$routeProvider",function($routeProvider){$routeProvider.when("/api/:api*?",{templateUrl:"app/partials/api.html",controller:"ApiCtrl"}).when("/page/:page?",{templateUrl:"app/partials/page.html",controller:"PageCtrl"}).otherwise({redirectTo:"/api/"})}]),evid.config((function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("deep-orange").accentPalette("grey")})),evid.config(["markedProvider",function(markedProvider){markedProvider.setOptions({gfm:!0,tables:!0,highlight:function(code,lang){return lang?hljs.highlight(lang,code,!0).value:hljs.highlightAuto(code).value}})}]),evid.filter("slugify",(function(){return function(input){return input?input.toLowerCase().replace(/\W+/g,"-"):""}})),evid.filter("ucfirst",(function(){return function(input){return input?input.charAt(0).toUpperCase()+input.substring(1):""}})),evid.controller("AppCtrl",["$scope","$http","$mdSidenav","evid","definition","registry",function($scope,$http,$mdSidenav,evid,definition,registry){$scope.menus=evid.menu,$scope.categories=[],$scope.apps=[],$scope.routings=[],$scope.toggleSidebar=function(){$mdSidenav("left").toggle()},$scope.loadRoutings=function(){definition.initialize().then((function(result){$scope.apiVersion=result.home.apiVersion,$scope.title=result.home.title,$scope.description=result.home.description,$scope.contactUrl=result.home.contactUrl,$scope.contactEmail=result.home.contactEmail,$scope.apps=result.home.apps,$scope.categories=result.home.categories,$scope.scopes=result.home.scopes,$scope.links=result.home.links,$scope.routings=result.def.getRoutings()}))},$scope.loadCategory=function(category){definition.initialize(category).then((function(result){$scope.routings=result.def.getRoutings()}))},$scope.isAppsNotEmpty=function(){return angular.isObject($scope.apps)&&Object.keys($scope.apps).length>0},$scope.loadRoutings()}]),evid.run((function(){})),angular.module("evid.api",[]).controller("ApiCtrl",["$scope","$http","$compile","$sce","$mdSidenav","$mdDialog","$routeParams","definition","registry","schema","evid",function($scope,$http,$compile,$sce,$mdSidenav,$mdDialog,$routeParams,definition,registry,schema,evid){function ConsoleCtrl($scope,$http,endpoint,method,body){$scope.request={method,url:endpoint,accessToken:"",body},$scope.response={statusCode:null,statusText:null,body:null},$scope.methods=["GET","POST","PUT","DELETE"],$scope.loading=!1,$scope.sendRequest=function(){$scope.loading=!0;var callback=function(resp){$scope.loading=!1,$scope.response.statusCode=resp.status,$scope.response.statusText=resp.statusText,$scope.response.body=JSON.stringify(resp.data,null,4)},headers=null,withCredentials=!1;$scope.request.accessToken&&(headers={Authorization:"Bearer "+$scope.request.accessToken},withCredentials=!0);var body=null;"POST"!==$scope.request.method&&"PUT"!==$scope.request.method||(body=$scope.request.body);var conf={method:$scope.request.method,url:$scope.request.url,data:body,headers,cache:!1,withCredentials};$http(conf).then(callback,callback)},$scope.close=function(){$mdDialog.cancel()}}$scope.api={},$scope.methods={},$scope.endpoint="",$scope.selectedMethod="",$scope.loadApi=function(){definition.initialize().then((function(result){var def=result.def,url=def.getLinkByRel("detail");if(url){var path=$routeParams.api?$routeParams.api:null;if(!path)if(def.hasEmptyRoute())path="/";else{var route=def.getFirstRoute();route&&(path=route.path)}url=(url=url.replace("{version}","*")).replace("{path}",path),$http.get(url).then((function(resp){if($scope.api=resp.data,$scope.api.methods){var methods={};for(var methodName in $scope.api.methods)if($scope.api.methods.hasOwnProperty(methodName)){var schema=$scope.getSchema(methodName,$scope.api.methods[methodName]);schema||(schema='<div class="md-padding md-default-theme">This API method provides no schema information.</div>'),methods[methodName]=schema}$scope.methods=methods;var endpoint=def.getLinkByRel("api");if(endpoint&&$scope.api.path&&($scope.endpoint=endpoint+$scope.api.path.substring(1)),$mdSidenav("left").close(),evid.examples){var exampleUrl="examples/"+path.replace("/","_").replace(":","")+".yaml";$http.get(exampleUrl).then((function(resp){$scope.examples=jsyaml.load(resp.data)}))}}}))}}))},$scope.getSchema=function(methodName,method){var html=schema.create($scope.api).getHtml(methodName,method),el=$compile(html)($scope);return $sce.trustAsHtml(el.html())},$scope.showConsole=function(ev){$mdDialog.show({controller:ConsoleCtrl,templateUrl:"app/partials/console.html",clickOutsideToClose:!0,targetEvent:ev,locals:{endpoint:$scope.endpoint,method:$scope.getSelectedMethod(),body:$scope.getBodySample()}})},$scope.getSelectedMethod=function(){var i=0;for(var methodName in $scope.methods)if($scope.methods.hasOwnProperty(methodName)){if(i===$scope.selectedMethod)return methodName;i++}return null},$scope.getBodySample=function(){var methodName=$scope.getSelectedMethod();if("GET"===methodName||"DELETE"===methodName)return"";if($scope.api.methods[methodName]){return JSON.stringify({},null,4)}return""},$scope.loadApi()}]),angular.module("evid.page",[]).controller("PageCtrl",["$scope","$http","$compile","$sce","$routeParams","$filter","evid",function($scope,$http,$compile,$sce,$routeParams,$filter,evid){$scope.title="",$scope.href="",$scope.loadDocument=function(){var slugify=$filter("slugify"),item=!1,title=!1;$routeParams.page&&(title=$routeParams.page);for(var i=0;i<evid.menu.length;i++)if(slugify(evid.menu[i].title)===title||!1===title){item=evid.menu[i];break}item?($scope.title=item.title,$scope.href=item.href):($scope.title="Page not found",$scope.href=null)},$scope.loadDocument()}]),angular.module("evid.definition",[]).service("definition",["$http","$q","evid","registry",function($http,$q,evid,registry){function Home(data){this.apiVersion=data.apiVersion,this.title=data.title,this.description=data.description,this.contactUrl=data.contactUrl,this.contactEmail=data.contactEmail,this.apps=angular.isObject(data.apps)?data.apps:{},this.categories=angular.isArray(data.categories)?data.categories:[],this.scopes=angular.isArray(data.scopes)?data.scopes:[],this.links=angular.isArray(data.links)?data.links:[],this.getLinkByRel=function(rel){for(var i=0;i<this.links.length;i++)if(this.links[i].rel===rel)return this.links[i].href;return null}}function Def(data,exclude){this.api=data,this.exclude=exclude,this.links=angular.isArray(data.links)?data.links:[],this.getRoutings=function(){var routings=[];if(angular.isArray(this.api.routings))if(angular.isArray(this.exclude))for(var i=0;i<this.api.routings.length;i++){for(var exclude=!1,j=0;j<this.exclude.length;j++)if(this.api.routings[i].path.match(this.exclude[j])){exclude=!0;break}exclude||routings.push(this.api.routings[i])}else routings=this.api.routings;return routings},this.getFirstRoute=function(){var routings=this.getRoutings();return routings.length>0?routings[0]:null},this.hasEmptyRoute=function(){for(var routings=this.getRoutings(),i=0;i<routings.length;i++)if("/"===routings[i].path)return!0;return!1},this.getLinkByRel=function(rel){for(var i=0;i<this.links.length;i++)if(this.links[i].rel===rel)return this.links[i].href;return null}}this.initialize=function(category){return $q((function(resolve,reject){(registry.has("home")?$q((function(resolve,reject){resolve(registry.get("home"))})):$q((function(resolve,reject){$http.get(evid.url).then((function(response){var home=new Home(response.data);registry.set("home",home),resolve(home)}),(function(){reject()}))}))).then(home=>{(function(home,category){if(registry.has("definition_"+category))return $q((function(resolve,reject){resolve(registry.get("definition_"+category))}));var docUrl=home.getLinkByRel("documentation");return docUrl||(docUrl=evid.url+"/system/doc"),category&&(docUrl+="?filter="+category),$q((function(resolve,reject){$http.get(docUrl).then((function(response){var def=new Def(response.data,evid.exclude);registry.set("definition_"+category,def),resolve(def)}),(function(){reject()}))}))})(home,category).then(def=>{resolve({def,home})},()=>{reject()})},()=>{reject()})}))}}]),angular.module("evid.registry",[]).service("registry",(function(){this.container={},this.set=function(name,service){this.container[name]=service},this.get=function(name){return this.has(name)?this.container[name]:null},this.has=function(name){return this.container.hasOwnProperty(name)}})),angular.module("evid.schema",[]).service("schema",(function(marked){function SchemaGenerator(definition){this.definitions=definition.definitions,this.chunks=[],this.generated=[],this.getHtml=function(methodName,method){this.chunks=[],this.generated=[];var html="<div>";if(method.tags&&angular.isArray(method.tags)){html+='<div class="evid-method-tags">',html+="<ul>";for(var i=0;i<method.tags.length;i++)html+="<li>"+method.tags[i]+"</li>";html+="</ul>",html+="</div>"}if(method.description&&angular.isString(method.description)&&(html+='<div class="evid-method-description">'+marked(method.description)+"</div>"),html+='<div class="evid-schema-table">',html+="<table>",html+="<colgroup>",html+='<col width="30%">',html+='<col width="70%">',html+="</colgroup>",method.operationId&&angular.isString(method.operationId)&&(html+="<tr>",html+='<td><span class="evid-property">Operation-Id</span></td>',html+='<td><span class="evid-property-type">'+method.operationId+"</span></td>",html+="</tr>"),method.queryParameters&&angular.isString(method.queryParameters)&&(html+="<tr>",html+='<td><span class="evid-property">Parameters</span></td>',html+='<td><span class="evid-property-type">'+method.queryParameters+"</span></td>",html+="</tr>",this.generateDefinition(method.queryParameters)),method.request&&angular.isString(method.request)&&(html+="<tr>",html+='<td><span class="evid-property">Request</span></td>',html+='<td><span class="evid-property-type">'+method.request+"</span></td>",html+="</tr>",this.generateDefinition(method.request)),method.responses&&angular.isObject(method.responses))for(var statusCode in method.responses)html+="<tr>",html+='<td><span class="evid-property">Response - '+statusCode+"</span></td>",html+='<td><span class="evid-property-type">'+method.responses[statusCode]+"</span></td>",html+="</tr>",this.generateDefinition(method.responses[statusCode]);return html+="</table>",html+='<md-subheader class="md-primary">Schemas</md-subheader>',html+=this.chunks.join("\n"),html+="</div>",html+="</div>"},this.generateDefinition=function(name){if(!this.generated.includes(name)){this.generated.push(name);var type=this.resolveType(name);return"object"===type.type&&(type.properties||type.$extends)?this.generateStruct(name,type):"object"===type.type&&type.additionalProperties?this.generateMap(name,type):"array"===type.type&&type.items?this.generateArray(name,type):type.oneOf?this.generateUnion(name,type):type.allOf?this.generateIntersection(name,type):type.$ref?this.generateReference(name,type):void 0}},this.generateStruct=function(name,type){var parent=type.$extends;if(parent){var parentType=this.resolveType(parent);type=Object.assign(parentType,type)}var required=type.required,types=[],generics=[],props={};for(var key in type.properties){var property=type.properties[key],generic=this.getGeneric(property);generic&&generics.push(generic);var isRequired=!1;required&&angular.isArray(required)&&(isRequired=required.includes(key)),props[key]={name:key,type:this.getType(property,type),required:isRequired,comment:property.description},types=types.concat(this.getInnerTypes(property,type))}this.chunks.push(this.writeStruct(name,props,parent,generics,type));for(var i=0;i<types.length;i++)this.generateDefinition(types[i])},this.generateMap=function(name,type){var property=type.additionalProperties,props={};props["*"]={name:"*",type:this.getType(property,type),required:!1,comment:type.description},this.chunks.push(this.writeStruct(name,props,null,null,type));for(var types=this.getInnerTypes(property,type),i=0;i<types.length;i++)this.generateDefinition(types[i])},this.generateArray=function(name,type){},this.generateUnion=function(name,type){},this.generateIntersection=function(name,type){},this.generateReference=function(name,type){this.chunks.push(this.writeReference(name,this.getType(type),type))},this.writeStruct=function(name,props,parent,generics,origin){var title='<a id="'+name+'">'+name+"</a>";if(generics&&angular.isArray(generics)){for(var parts=[],i=0;i<generics.length;i++)origin.$template[generics[i]]?parts.push(origin.$template[generics[i]]):parts.push(generics[i]);parts.length>0&&(title+="&lt;"+parts.join(", ")+"&gt;")}var resp="";resp+='<div class="evid-object">',resp+='<md-subheader class="md-hue-2"><strong>'+title+"</strong></md-subheader>",origin.description&&angular.isString(origin.description)&&(resp+='<div class="evid-object-description">'+this.escapeHtml(origin.description)+"</div>");var rows=[];for(var key in props){var property=props[key];rows.push([key,property.type,property.required,property.comment,origin])}return resp+=this.generateJson(rows),resp+=this.generateTable(rows),resp+="</div>"},this.writeMap=function(){},this.writeArray=function(){},this.writeUnion=function(){},this.writeIntersection=function(){},this.writeReference=function(name,type,origin){var html="";return html+='<md-subheader class="md-hue-2"><strong>'+name+"</strong></md-subheader>",html+='<div id="'+name+'" class="psx-object psx-reference">',html+="</div>",this.generateDefinition(origin.$ref),html},this.writeConstraints=function(){},this.resolveType=function(ref){if(!ref)return null;var template,type=this.definitions[ref];if(!type)return null;type.$ref&&(type.$template&&(template=type.$template),type=this.resolveType(type.$ref),template&&(type.$template=template));return type},this.generateTable=function(rows){var html="";html+="<table>",html+="<colgroup>",html+='<col width="30%">',html+='<col width="70%">',html+="</colgroup>",html+="<thead>",html+="<tr>",html+="<th>Field</th>",html+="<th>Description</th>",html+="</tr>",html+="</thead>",html+="<tbody>";for(var i=0;i<rows.length;i++)[name,type,required,description,origin]=rows[i],html+="<tr>",required?html+='<td><span class="evid-property evid-property-required" title="required">'+name+"</span></td>":html+='<td><span class="evid-property">'+name+"</span></td>",html+="<td>",html+='<span class="evid-property-type">'+type+"</span>",html+='<div class="evid-property-description">'+this.escapeHtml(description)+"</div>",html+=this.buildConstraints(origin),html+="</td>",html+="</tr>";return html+="</tbody>",html+="</table>"},this.generateJson=function(rows){var json="";json+='<pre class="evid-object-json">',json+='<span class="evid-object-json-pun">{</span>\n';for(var i=0;i<rows.length;i++)[name,type]=rows[i],json+="  ",json+='<span class="evid-object-json-key">"'+name+'"</span>',json+='<span class="evid-object-json-pun">: </span>',json+='<span class="evid-property-type">'+type+"</span>",json+='<span class="evid-object-json-pun">,</span>',json+="\n";return json+='<span class="evid-object-json-pun">}</span>',json+="</pre>"},this.getType=function(property,origin){var typeName,i=0,result=[];if(property.properties)return'<span class="evid-property-type evid-property-type-object">Struct</span>';if(property.additionalProperties)return'<span class="evid-property-type evid-property-type-object">Map (string, '+this.getType(property.additionalProperties,origin)+")</span>";if(property.items)return'<span class="evid-property-type evid-property-type-array">Array ('+this.getType(property.items,origin)+")</span>";if(property.oneOf&&angular.isArray(property.oneOf)){for(i=0;i<property.oneOf.length;i++)result.push(this.getType(property.oneOf[i]),origin);return result.join(" | ")}if(property.allOf&&angular.isArray(property.allOf)){for(i=0;i<property.allOf.length;i++)result.push(this.getType(property.allOf[i]),origin);return result.join(" & ")}if(property.$generic&&angular.isString(property.$generic))return origin.$template[property.$generic];if(property.$ref&&angular.isString(property.$ref))return"<a>"+property.$ref+"</a>";typeName=property.type&&angular.isString(property.type)?this.ucfirst(property.type):"Mixed";var format=property.format;return"date"===format?'<a href="http://tools.ietf.org/html/rfc3339#section-5.6" title="RFC3339">Date</a>':"date-time"===format?'<a href="http://tools.ietf.org/html/rfc3339#section-5.6" title="RFC3339">DateTime</a>':"time"===format?'<a href="http://tools.ietf.org/html/rfc3339#section-5.6" title="RFC3339">Time</a>':"duration"===format?'<a href="https://en.wikipedia.org/wiki/ISO_8601#Durations" title="ISO8601">Duration</a>':"uri"===format?'<a href="http://tools.ietf.org/html/rfc3986" title="RFC3339">URI</a>':"binary"===format?'<a href="http://tools.ietf.org/html/rfc4648" title="RFC4648">Base64</a>':typeName},this.getGeneric=function(type){var items;return type.additionalProperties?items=type.additionalProperties:type.items&&(items=type.items),items&&items.$generic?items.$generic:null},this.buildConstraints=function(property){var html="<dl>";return property.pattern&&(html+="<dt>Pattern:</dt><dd>"+property.pattern+"</dd>"),property.enum&&angular.isArray(property.enum)&&(html+="<dt>Enum:</dt><dd>"+property.enum.join(", ")+"</dd>"),property.minLength&&(html+="<dt>Min-Length:</dt><dd>"+property.minLength+"</dd>"),property.maxLength&&(html+="<dt>Max-Length:</dt><dd>"+property.maxLength+"</dd>"),property.maximum&&(html+="<dt>Maximum:</dt><dd>"+property.maximum+"</dd>"),property.minimum&&(html+="<dt>Minimum:</dt><dd>"+property.minimum+"</dd>"),property.multipleOf&&(html+="<dt>Multiple of:</dt><dd>"+property.multipleOf+"</dd>"),html+="</dl>"},this.ucfirst=function(input){return angular.isString(input)?input.charAt(0).toUpperCase()+input.substring(1):""},this.escapeHtml=function(html){return angular.isString(html)?html.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"):""},this.getInnerTypes=function(type,origin){var i,result=[];if(type.additionalProperties)result.push(this.getInnerRefType(type.additionalProperties,origin));else if(type.items)result.push(this.getInnerRefType(type.items,origin));else if(type.oneOf&&angular.isArray(type.oneOf))for(i=0;i<type.oneOf.length;i++)result.push(this.getInnerRefType(type.oneOf[i],origin));else if(type.allOf&&angular.isArray(type.allOf))for(i=0;i<type.allOf.length;i++)result.push(this.getInnerRefType(type.allOf[i],origin));else result.push(this.getInnerRefType(type,origin));return result.filter((function(value){return null!==value}))},this.getInnerRefType=function(type,origin){return type.$ref&&angular.isString(type.$ref)?type.$ref:type.$generic&&angular.isString(type.$generic)?origin.$template[type.$generic]:null}}this.create=function(definition){return new SchemaGenerator(definition)}}));